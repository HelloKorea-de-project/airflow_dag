name: python static checks and tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
          architecture: x64

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install apache-airflow
          pip install -r requirements.txt

      - name: Install Black
        run: pip install black
      - name: Run black
        run: find . -name "*.py" | xargs black

      - name: Install Flake8
        run: pip install flake8
      - name: Run Flake8
        run: flake8

      - name: Install Pylint
        run: pip install pylint
      - name: Run Pylint
        run: find . -name "*.py" | xargs pylint --output-format=colorized

      - name: Test DAG integrity
        run: |
          pip install pytest
          test_files=$(ls tests/test_*.py 2> /dev/null || true)
          test_files+=$(ls tests/*_test.py 2> /dev/null || true)
          if [ -n "$test_files" ]; then
            pytest -v tests/
          else
            echo "No test files found, skipping pytest."
          fi

      - name: Check DAGs for cycles
        run: |
          export AIRFLOW_HOME=$(mktemp -d)
          mkdir -p $AIRFLOW_HOME/dags
          cp -r dags/* $AIRFLOW_HOME/dags/
          airflow db init
          for dag in $(find $AIRFLOW_HOME/dags -name "*.py" -exec basename {} .py \;); do
            airflow dags test $dag 2024-01-01
          done
        env:
          AIRFLOW_HOME: ${{ env.AIRFLOW_HOME }}

  sync_dags:
    runs-on: ubuntu-latest
    needs: testing
    if: github.ref == 'refs/heads/feature/common_test_actions'
    steps:
      - uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
          architecture: x64

      - name: Install AWS CLI
        run: pip install awscli

      - name: Sync DAGs to Amazon S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          S3_BUCKET: ${{ secrets.S3_BUCKET }}
        run: |
          # aws s3 sync dags/ s3://$S3_BUCKET/dags/
          # aws s3 sync plugins/ s3://$S3_BUCKET/plugins/
          # aws s3 sync tests/ s3://$S3_BUCKET/tests/
          aws s3 sync / s3://$S3_BUCKET/
